{"version":3,"sources":["graph/index.js","components/ModalForm.js","components/ModalDelete.js","graph/vars.js","components/MovieGridList.js","components/CardSeries.js","components/Preload.js","pages/Homepage.js","pages/FavoritePage.js","components/Navbar.js","components/ScrollTop.js","App.js","reportWebVitals.js","config/index.js","index.js"],"names":["GET_ALL","gql","ADD_MOVIES","GET_MOVIES","PUT_MOVIES","DEL_MOVIES","GET_FAVORITES","useStyles","makeStyles","theme","style","color","backgroundColor","chipContainer","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","chip","FormDialog","open","close","editData","classes","useState","newTag","setNewTag","useMutation","addMovie","data","updateMovie","toggleError","setToggleError","title","overview","poster_path","popularity","tags","formData","setFormData","useEffect","onChangeInput","e","key","input","target","value","console","log","newInput","Dialog","className","onClose","PaperProps","DialogTitle","id","DialogContent","TextField","label","size","error","helperText","defaultValue","onChange","fullWidth","variant","required","autoComplete","Button","onClick","JSON","parse","stringify","push","startIcon","Paper","component","map","index","Chip","onDelete","tagToDelete","filter","tag","DialogActions","preventDefault","_id","length","updatedMovie","variables","refetchQueries","query","Transition","React","forwardRef","props","ref","Slide","direction","ModalDelete","delData","confirmDelete","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogContentText","favoritesVar","makeVar","root","overflow","gridList","transform","overflowX","overflowY","width","boxShadow","borderRadius","zIndex","titleBar","background","tile","transitionDuration","cursor","detail","SingleLineGridList","movies","slice","reverse","openSnackbar","setOpenSnackbar","snackbarMsg","setSnackbarMsg","openDetail","setOpenDetail","openModalEdit","setOpenModalEdit","setEditData","delMovie","setDelData","openModalDelete","setOpenModalDelete","useQuery","loading","backUpImage","message","favorites","handleCloseSnackbar","event","reason","toggleDetail","idDetail","handleBookmark","movie","isFav","find","el","GridList","cellHeight","cols","GridListTile","Box","Typography","paragraph","join","GridListTileBar","actionIcon","type","IconButton","aria-label","onClickEdit","src","onError","onerror","alt","subtitle","Rating","name","precision","readOnly","Snackbar","anchorOrigin","vertical","horizontal","ContentProps","autoHideDuration","action","Fragment","fontSize","marginRight","media","height","spacearound","Preload","flex","CircularProgress","gridContainer","textAlign","Home","useHistory","openModal","setOpenModal","series","FavoritePage","flexGrow","menuButton","header","navItem","textDecoration","alignItems","font","HideOnScroll","children","window","trigger","useScrollTrigger","undefined","appear","in","HideAppBar","CssBaseline","AppBar","Toolbar","to","activeStyle","position","bottom","right","ScrollTop","disableHysteresis","threshold","Zoom","scroll","top","left","behavior","role","Fab","darkTheme","createMuiTheme","palette","primary","main","secondary","bg","App","ThemeProvider","minHeight","path","HomePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cache","InMemoryCache","typePolicies","Query","fields","read","client","ApolloClient","uri","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e90b2c8.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\"\r\n\r\nexport const GET_ALL = gql`\r\nquery {\r\n  movies {\r\n    _id\r\n    title\r\n    overview\r\n    poster_path\r\n    popularity\r\n    tags\r\n  }\r\n  series {\r\n    _id\r\n    title\r\n    overview\r\n    poster_path\r\n    popularity\r\n    tags\r\n  }\r\n}\r\n`\r\n\r\nexport const ADD_MOVIES = gql`\r\n  mutation addMovies($input: MovieInput) {\r\n    addMovies (input: $input) {\r\n      _id,\r\n      title,\r\n      overview,\r\n      poster_path\r\n      popularity\r\n      tags\r\n    }\r\n  }\r\n`\r\n  \r\nexport const GET_MOVIES = gql`\r\n  query {\r\n    movies {\r\n      _id\r\n      title\r\n      overview\r\n      poster_path\r\n      popularity\r\n      tags\r\n    }\r\n  }\r\n`\r\n\r\nexport const PUT_MOVIES = gql`\r\n  mutation updateMovies($input: MovieUpdate) {\r\n    updateMovies (input: $input) {\r\n      updateCount\r\n    }\r\n  }\r\n`\r\n\r\nexport const DEL_MOVIES = gql`\r\n  mutation delMovies($input: ID!) {\r\n    delMovies (input: $input) {\r\n      msg\r\n    }\r\n  } \r\n`\r\n\r\nexport const GET_FAVORITES = gql`\r\n  query getFavorites {\r\n    favorites @client\r\n  }\r\n`","import { useEffect, useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\r\nimport { ADD_MOVIES, GET_MOVIES, PUT_MOVIES } from '../graph/index'\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PublishIcon from '@material-ui/icons/Publish'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  style: {\r\n    color: \"#000000\",\r\n    backgroundColor: 'transparent'\r\n  },\r\n  chipContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'start',\r\n    flexWrap: 'wrap',\r\n    listStyle: 'none',\r\n    padding: theme.spacing(0.5),\r\n    margin: 0,\r\n    backgroundColor: 'transparent'\r\n\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: '#212121'\r\n\r\n  },\r\n}))\r\n\r\nexport default function FormDialog({open, close, editData}) {\r\n  const classes = useStyles();\r\n  const [newTag, setNewTag] = useState('')\r\n  const [ addMovie, { data: newMovieResult} ] = useMutation(ADD_MOVIES)\r\n  const [ updateMovie, { data: updatedCount} ] = useMutation(PUT_MOVIES)\r\n  const [toggleError, setToggleError] = useState(false)\r\n  const [formData, setFormData] = useState(editData ? editData : {\r\n    title: '',\r\n    overview: '',\r\n    poster_path: '',\r\n    popularity: 0,\r\n    tags: []})\r\n\r\n  useEffect (() => {\r\n    // console.log(editData, 'isi edit data')\r\n    if (editData) {\r\n      setFormData(editData)\r\n    } else if (open) {\r\n      setFormData({\r\n        title: '',\r\n        overview: '',\r\n        poster_path: '',\r\n        popularity: 0,\r\n        tags: []})\r\n    } \r\n  }, [editData, open])\r\n\r\n  const submitAddMovies = (e) => {\r\n    e.preventDefault()\r\n    if (formData.title && formData.overview && formData.poster_path\r\n      && formData.popularity >= 0 && formData.popularity <= 10 && formData.tags.length > 0) {\r\n      // console.log(formData, 'ini dataform')\r\n      addMovie({\r\n        variables: { input: formData },\r\n        refetchQueries: [{ query: GET_MOVIES }]\r\n      })\r\n      setToggleError(false)\r\n      close()\r\n    } else {\r\n      setToggleError(true)\r\n    }\r\n  }\r\n\r\n  const submitEditMovies = (e) => {\r\n    e.preventDefault()\r\n    if (formData._id && formData.title && formData.overview && formData.poster_path\r\n      && formData.popularity >= 0 && formData.popularity <= 10 && formData.tags.length > 0) {\r\n      // console.log(formData, 'ini dataform')\r\n      let updatedMovie = {\r\n        _id: formData._id,\r\n        title: formData.title,\r\n        overview: formData.overview,\r\n        poster_path: formData.poster_path,\r\n        popularity: formData.popularity,\r\n        tags: formData.tags\r\n      }\r\n      updateMovie({\r\n        variables: { input: updatedMovie },\r\n        refetchQueries: [{ query: GET_MOVIES }]\r\n      })\r\n      setToggleError(false)\r\n      close()\r\n    } else {\r\n      setToggleError(true)\r\n    }\r\n  }\r\n\r\n  function onChangeNewTag (e) {\r\n    setNewTag(e.target.value)\r\n  } \r\n\r\n  function addNewTag () {\r\n    let newInput = JSON.parse(JSON.stringify(formData))\r\n    newInput.tags.push(newTag)\r\n    setFormData(newInput)\r\n    setNewTag('')\r\n  }\r\n\r\n  function onChangeInput (e, key) {\r\n    let input = e.target.value\r\n    if (key === 'popularity') {\r\n      input = +e.target.value\r\n    }\r\n    console.log(e)\r\n    let newInput = {...formData}\r\n    newInput[key] = input\r\n    setFormData(newInput)\r\n  }\r\n\r\n  const handleDelete = (tagToDelete) => () => {\r\n    let newInput = JSON.parse(JSON.stringify(formData))\r\n    newInput.tags = newInput.tags.filter((tag) => tag !== tagToDelete)\r\n    setFormData(newInput);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        className={classes.style}\r\n        open={open}\r\n        onClose={close}\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: 'Black',\r\n            color:'grey'\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          {\r\n          editData? <span>Edit</span> : <span>Add</span> \r\n          } Movie</DialogTitle>\r\n        <DialogContent>\r\n          <TextField label=\"Title\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            error={toggleError}\r\n            helperText=\"title cannot be empty\"\r\n            style={{ margin: 8 }}\r\n            defaultValue={formData.title}\r\n            onChange={(e) => onChangeInput(e, \"title\")}\r\n            fullWidth variant=\"outlined\" required \r\n            autoComplete=\"off\"/>\r\n\r\n          <TextField label=\"Overview\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            style={{ margin: 8 }}\r\n            error={toggleError}\r\n            helperText=\"overview cannot be empty\"\r\n            defaultValue={formData.overview}\r\n            onChange={(e) => onChangeInput(e, \"overview\")}\r\n            fullWidth variant=\"outlined\" required \r\n            autoComplete=\"off\"/>\r\n\r\n          <TextField label=\"Poster URL\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            style={{ margin: 8 }}\r\n            error={toggleError}\r\n            helperText=\"Poster url cannot be empty\"\r\n            defaultValue={formData.poster_path}\r\n            onChange={(e) => onChangeInput(e, \"poster_path\")}\r\n            fullWidth variant=\"outlined\" required \r\n            autoComplete=\"off\"/>\r\n\r\n          <TextField label=\"Popularity\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            style={{ margin: 8 }}\r\n            error={toggleError}\r\n            helperText=\"Input popularity between 0 - 10\"\r\n            defaultValue={formData.popularity}\r\n            onChange={(e) => onChangeInput(e, \"popularity\")}\r\n            fullWidth variant=\"outlined\" required \r\n            autoComplete=\"off\"/>\r\n\r\n          <TextField label=\"Tags\"\r\n            color=\"secondary\"\r\n            style={{ margin: 8 }}\r\n            size=\"small\"\r\n            defaultValue=''\r\n            onChange={onChangeNewTag}\r\n            error={toggleError}\r\n            helperText=\"Input at least 1 tag\"\r\n            variant=\"outlined\" required \r\n            autoComplete=\"off\"/>\r\n            <Button\r\n              size=\"medium\"\r\n              style={{ margin: 8, color: \"grey\" }}\r\n              variant=\"outlined\"\r\n              onClick={addNewTag}\r\n              startIcon={< AddBoxIcon/>}\r\n            >Add Tag</Button>\r\n\r\n            <Paper component=\"ul\" className={classes.chipContainer}>\r\n              {formData.tags.map((data, index) => {\r\n                return (\r\n                  <li key={index}>\r\n                    <Chip\r\n                      label={data}\r\n                      onDelete={handleDelete(data)}\r\n                      className={classes.chip}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n            </Paper>\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n          size=\"large\"\r\n          style={{ margin: 8 }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={editData? submitEditMovies : submitAddMovies}\r\n          startIcon={<PublishIcon />}\r\n        >SUBMIT</Button>\r\n        <Button\r\n          size=\"large\"\r\n          style={{ margin: 8 }}\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={close}\r\n          startIcon={<ClearIcon />}\r\n        >CANCEL</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ModalDelete({open, close, delData, confirmDelete}) {\r\n\r\n  useEffect (()=> {\r\n    console.log('modal delete refresh')\r\n  }, [delData, open])\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={close}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: 'Black',\r\n            color:'grey'\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Delete this Movie?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Movie {delData.title} will be deleted and cannot be recovered.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={close} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={confirmDelete} color=\"primary\">\r\n            Confirm Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { makeVar } from '@apollo/client'\r\n\r\nexport const favoritesVar = makeVar([\r\n  // {\r\n  //   title: 'acasc',\r\n  //   overview: 'ascac',\r\n  //   poster_path: 'ascascac',\r\n  //   popularity: 7,\r\n  //   tags: ['ascasc']\r\n  // }\r\n])\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport Rating  from '@material-ui/lab/Rating'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TurnedInNotIcon from '@material-ui/icons/TurnedInNot'\r\nimport TurnedInIcon from '@material-ui/icons/TurnedIn'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ModalForm from '../components/ModalForm'\r\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\r\nimport { DEL_MOVIES, GET_MOVIES, GET_FAVORITES } from '../graph/index'\r\nimport ModalDelete from './ModalDelete'\r\nimport { useReactiveVar } from '@apollo/client'\r\nimport { favoritesVar } from '../graph/vars'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: \"#000000\",\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    transform: 'translateZ(0)',\r\n    overflowX: \"scroll\",\r\n    overflowY: \"hidden\",\r\n    width: '100%',\r\n    padding: 10,\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 5,\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: '#150C0C',\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n  title: {\r\n    zIndex: 200,\r\n    color: \"#ffffff\",\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  tile: {\r\n    '&:hover': {\r\n      transform: \"scale(1.05)\",\r\n      transitionDuration: 300,\r\n      zIndex: 100,\r\n      cursor: \"pointer\"\r\n    },\r\n    width: 300,\r\n    backgroundColor: \"#150C0C\"\r\n  },\r\n  detail: {\r\n    padding: 10,\r\n    backgroundColor: \"#150C0C\"\r\n  }\r\n}));\r\n\r\nexport default function SingleLineGridList(props) {\r\n  const classes = useStyles();\r\n  let movies = props.data.slice().reverse()\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n  const [snackbarMsg, setSnackbarMsg] = React.useState('')\r\n  const [openDetail, setOpenDetail] = React.useState({open: false, id: ''});\r\n  const [openModalEdit, setOpenModalEdit] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(false);\r\n  const [ delMovie, { data: delResult} ] = useMutation(DEL_MOVIES)\r\n  const [delData, setDelData] = React.useState({ _id: '' });\r\n  const [openModalDelete, setOpenModalDelete] = React.useState(false);\r\n  const {data, loading, error } = useQuery(GET_FAVORITES)\r\n  const backUpImage = 'https://image.tmdb.org/t/p/w500/5lqJx0uNKrD1cEKgaqF1LBsLAoi.jpg'\r\n  if (loading) {\r\n    return <p>Loading...</p>\r\n  }\r\n  if (error) {\r\n    return <p>Error {error.message}</p>\r\n  }\r\n\r\n  console.log(data, 'ini isi data fav')\r\n  const { favorites } = data\r\n  ///////// SNACKBAR HANDLER\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  ////////// DETAIL CARD\r\n  const toggleDetail = (idDetail) => {\r\n    setOpenDetail({ open: !openDetail.open, id: idDetail})\r\n  }\r\n\r\n  //////// EDIT HANDLER\r\n  const onClickEdit = (movie) => {\r\n    setEditData(movie)\r\n    setOpenModalEdit(true)\r\n  }\r\n  \r\n  const handleCloseEdit = () => {\r\n    setOpenModalEdit(false);\r\n  };\r\n\r\n  ///////// DELETE HANDLER\r\n  const onClickDelete = (movieToDel) => {\r\n    setDelData(movieToDel)\r\n    setOpenModalDelete(true)\r\n  }\r\n  const confirmDelete = () => {\r\n    delMovie({\r\n      variables: { input: delData._id },\r\n      refetchQueries: [{ query: GET_MOVIES }]\r\n    })\r\n    setOpenModalDelete(false)\r\n    setSnackbarMsg(`${delData.title} deleted successfully`)\r\n    setOpenSnackbar(true);\r\n  }\r\n  const handleCloseDelete = () => {\r\n    setOpenModalDelete(false);\r\n  };\r\n\r\n  ///////// BOOKMARK HANDLER\r\n  const handleBookmark = (movie) => {\r\n    let isFav = favorites.find((el) => el._id === movie._id)\r\n    console.log(isFav, 'isi isFav')\r\n    if (isFav) {\r\n      favoritesVar(favorites.filter(el => el._id !== movie._id))\r\n      setSnackbarMsg(`${movie.title} removed from your favorites`)\r\n      setOpenSnackbar(true);\r\n    } else {\r\n      favoritesVar([...favorites, movie])\r\n      setSnackbarMsg(`${movie.title} added to your favorites`)\r\n      setOpenSnackbar(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ModalDelete\r\n        open={openModalDelete}\r\n        close={handleCloseDelete}\r\n        delData={editData}\r\n        confirmDelete={confirmDelete}\r\n      />\r\n      <ModalForm\r\n        open={openModalEdit}\r\n        close={handleCloseEdit}\r\n        editData={editData}\r\n      />\r\n      <GridList cellHeight={450} className={classes.gridList}\r\n      cols={0}>\r\n        {movies.map((movie) => (\r\n          openDetail.open && openDetail.id === movie._id\r\n          ? \r\n            <GridListTile key={movie._id} className={classes.tile}\r\n              onClick={() => toggleDetail(movie._id)}>\r\n              <Box className={classes.detail}>\r\n                <Typography variant=\"h6\" paragraph={true}>{movie.title}</Typography>\r\n                <Typography variant=\"caption\" paragraph={true}>{movie.overview}</Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle1\">Tags: {movie.tags.join(', ')}</Typography>\r\n              </Box>\r\n              <GridListTileBar\r\n                classes={{\r\n                  root: classes.titleBar,\r\n                  title: classes.title,\r\n                }}\r\n                actionIcon={\r\n                  props.type === \"series\"\r\n                  ? <></>\r\n                  :\r\n                  <>\r\n                  <IconButton aria-label={`favorite ${movie.title}`}\r\n                  onClick={() => onClickEdit(movie)}>\r\n                    <EditIcon className={classes.title} />\r\n                  </IconButton>\r\n                  <IconButton aria-label={`favorite ${movie.title}`}\r\n                  onClick={() => onClickDelete(movie)}>\r\n                    <DeleteForeverIcon className={classes.title} />\r\n                  </IconButton>\r\n                  </>\r\n                }\r\n              />\r\n\r\n            </GridListTile>\r\n          :\r\n          <GridListTile key={movie._id} className={classes.tile}>\r\n            <img\r\n            src={movie.poster_path}\r\n            onError={(e)=>{ if (e.target.src !== backUpImage) { e.target.onerror = null; e.target.src=backUpImage; } }}\r\n            alt={movie.title}\r\n            onClick={() => toggleDetail(movie._id)}\r\n            \r\n            />\r\n            <GridListTileBar\r\n              title={movie.title}\r\n              subtitle={\r\n                <>\r\n                <Typography>{movie.popularity}&nbsp;\r\n                  <Rating name=\"read-only\" \r\n                    precision={0.1}\r\n                    value={movie.popularity / 2}\r\n                    readOnly\r\n                    size=\"small\"\r\n                    />\r\n                </Typography>\r\n                </>\r\n              }\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                props.type === \"series\"\r\n                  ? <></>\r\n                  :\r\n                (favorites.find((el) => el._id === movie._id)\r\n                  ?\r\n                  <IconButton aria-label={`favorite ${movie.title}`}\r\n                  onClick={() => handleBookmark(movie)}>\r\n                      <TurnedInIcon className={classes.title} />\r\n                  </IconButton>\r\n                  :\r\n                  <IconButton aria-label={`favorite ${movie.title}`}\r\n                  onClick={() => handleBookmark(movie)}>\r\n                      <TurnedInNotIcon className={classes.title} />\r\n                  </IconButton>)\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        ContentProps={{\r\n          style: {\r\n            backgroundColor: '#150C0C',\r\n            color:'#e83b42'\r\n          },\r\n        }}\r\n        open={openSnackbar}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n        message={snackbarMsg}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating  from '@material-ui/lab/Rating'\r\nimport { useHistory } from 'react-router';\r\nimport TurnedInNotIcon from '@material-ui/icons/TurnedInNot'\r\nimport TurnedInIcon from '@material-ui/icons/TurnedIn'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n    flexWrap: 'nowrap',\r\n    backgroundColor: \"#150C0C\",\r\n    // width: 100%,\r\n    // objectFit: \"contain\",\r\n    marginRight: 0,\r\n    '&:hover': {\r\n      transform: \"scale(1.05)\",\r\n      transitionDuration: 300,\r\n      zIndex: 100\r\n    },\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  spacearound: {\r\n    display: 'flex',\r\n    flexWrap: 'no-wrap',\r\n    justifyContent: 'space-between',\r\n    overflow: 'hidden',\r\n\r\n  }\r\n});\r\n\r\nexport default function CardSeries (props) {\r\n  const history = useHistory()\r\n  let datum = props.datum\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n    // nanti dipakai untuk bookmarknya\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  function goToEdit() {\r\n    history.push('/add')\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <Card className={classes.root}>\r\n    <CardActionArea>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={datum.poster_path}\r\n        title={datum.title}\r\n      />\r\n      <CardContent>\r\n        <Typography >\r\n          {datum.title.toUpperCase()}\r\n        </Typography>\r\n\r\n    <CardActions>\r\n      <div className={classes.spacearound}>\r\n        <div>\r\n          <span>{datum.popularity}</span>\r\n          <Rating name=\"read-only\" \r\n            precision={0.1}\r\n            value={datum.popularity / 2}\r\n            readOnly\r\n            size=\"small\"\r\n            />\r\n        </div>\r\n        <Button size=\"small\" onClick={goToEdit}>\r\n          Edit\r\n        </Button>\r\n      </div>\r\n    </CardActions>\r\n      </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  </>\r\n  )\r\n} ","import { Box, CircularProgress } from '@material-ui/core'\r\n\r\nexport default function Preload () {\r\n  return (\r\n    <Box display='flex' flex='1' justifyContent='space-around'>\r\n      <CircularProgress size={100} />\r\n    </Box>\r\n  )\r\n}","import { useQuery, gql, useMutation } from \"@apollo/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { CircularProgress, Box, Typography, Button } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GET_ALL } from '../graph/index'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MovieGridList from '../components/MovieGridList'\r\nimport CardSeries from '../components/CardSeries'\r\nimport Preload from '../components/Preload'\r\nimport ModalForm from '../components/ModalForm'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  gridList: {\r\n    width: \"100%\",\r\n    height: 450,\r\n    // overflowX: \"scroll\",\r\n    // overflowY: \"hidden\",\r\n  },\r\n  gridContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'no-wrap',\r\n    justifyContent: 'space-between',\r\n    overflow: 'hidden',\r\n    padding: 20\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    margin:10\r\n  }\r\n}));\r\n\r\n\r\nexport default function Home () {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const { loading, error, data } = useQuery(GET_ALL)\r\n\r\n  useEffect(() => {\r\n    console.log(data)\r\n  }, [data])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  if (loading){\r\n    return <Preload />\r\n  } else if (error) {\r\n    return <p>error...</p>\r\n  }\r\n  return (\r\n    <>\r\n      <ModalForm open={openModal} close={handleClose} />\r\n      <div className={classes.gridContainer}>\r\n        <Typography variant=\"h5\" className={classes.title} component=\"h2\">\r\n          MOVIES\r\n        </Typography>\r\n        <Button variant=\"text\" color=\"primary\" size=\"small\" onClick={handleClickOpen}>\r\n          <AddBoxIcon fontSize=\"small\"/>&nbsp;Add New\r\n        </Button>\r\n      </div>\r\n\r\n      <MovieGridList display=\"flex\" data={data.movies} type=\"movie\" />\r\n\r\n      <div className={classes.gridContainer}>\r\n        <Typography variant=\"h5\" className={classes.title} component=\"h2\">\r\n          SERIES\r\n        </Typography>\r\n        <></>\r\n      </div>\r\n      {/* <Box display=\"flex\" flexDirection=\"row\" p={1} >\r\n      {\r\n        data.series.map(datum => (\r\n          <CardSeries key={datum._id} datum={datum} />\r\n        ))\r\n      }\r\n      </Box> */}\r\n      <MovieGridList display=\"flex\" data={data.series} type=\"series\"/>\r\n    </>\r\n  )\r\n}","import { Typography } from '@material-ui/core'\r\nimport MovieGridList from '../components/MovieGridList'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useReactiveVar, useQuery } from '@apollo/client'\r\nimport { favoritesVar } from '../graph/vars'\r\nimport { GET_FAVORITES } from '../graph/index'\r\nimport Preload from '../components/Preload';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  title: {\r\n    textAlign: 'center',\r\n    margin:10\r\n  }\r\n}));\r\nexport default function FavoritePage () {\r\n  const classes = useStyles();\r\n  const { data, loading, error } = useQuery(GET_FAVORITES)\r\n\r\n  // const favorites = useReactiveVar(favoritesVar)\r\n\r\n  if (loading){\r\n    return <Preload/>\r\n  }\r\n  if (error) {\r\n    return <p>Error {error.message}</p>\r\n  }\r\n  const { favorites } = data \r\n\r\n  if (favorites.length === 0) {\r\n    return (\r\n      <>\r\n      <Typography variant=\"h5\" className={classes.title} component=\"h2\">\r\n        YOUR FAVORITES\r\n      </Typography>\r\n      <Typography variant=\"h5\" className={classes.title} component=\"h2\">\r\n        IS EMPTY...\r\n      </Typography>\r\n    </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" className={classes.title} component=\"h2\">\r\n        YOUR FAVORITES\r\n      </Typography>\r\n      <MovieGridList display=\"flex\" data={favorites} type=\"favorite\" />\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { AppBar, Toolbar, Typography, Button, IconButton, Slide } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks'\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport TheatersIcon from '@material-ui/icons/Theaters'\r\nimport PropTypes from 'prop-types';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    color: \"#e83b42\",\r\n    backgroundColor: \"#150C0Cad\"\r\n  },\r\n  navItem: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap'\r\n  },\r\n  font: {\r\n    fontSize: 12\r\n  }\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n  \r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default function HideAppBar(props) {\r\n  const classes = useStyles()\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar className={classes.header}>\r\n        <Toolbar>\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"default\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <NavLink to=\"/\"\r\n                className={classes.navItem}\r\n                activeStyle={{color: '#e83b42'}}\r\n              >\r\n                <TheatersIcon />\r\n                <span className={classes.font}>\r\n                &nbsp;ENTERTAIN US\r\n                </span>\r\n              </NavLink>\r\n          </Typography>\r\n\r\n          <Button color=\"inherit\">\r\n            <NavLink to=\"/fav\"\r\n              className={classes.navItem}\r\n              activeStyle={{color: '#dd2c00'}}\r\n            >\r\n              <span className={classes.font}>\r\n              Your Favorites\r\n              &nbsp;\r\n              </span>\r\n              <BookmarksIcon />\r\n            </NavLink>\r\n          </Button>\r\n\r\n        </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    color: \"#e83b42\"\r\n  },\r\n}));\r\n\r\nexport default function ScrollTop(props) {\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    window.scroll({ top: 0, left: 0, behavior: \"smooth\" })\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}","import './App.css';\r\nimport HomePage from './pages/Homepage'\r\nimport FavoritePage from './pages/FavoritePage'\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles'\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Navbar from './components/Navbar'\r\nimport ScrollTop from './components/ScrollTop'\r\nimport { Paper } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#e83b42',\r\n    },\r\n    secondary: {\r\n      main: \"#e83b42\",\r\n    },\r\n\r\n  },\r\n});\r\nconst useStyles = makeStyles({\r\n  bg: {\r\n    backgroundColor: \"#000000\",\r\n    color: '#e83b42'\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n    <CssBaseline />\r\n      <ThemeProvider theme={darkTheme}>\r\n        <Paper width={1} className={classes.bg} style={{minHeight: '100vh'}}>\r\n          <Navbar />\r\n            <Switch>\r\n              <Route path=\"/fav\" component={FavoritePage} />\r\n              <Route path=\"/detail/:id\" component={FavoritePage} />\r\n              <Route path=\"/\" component={HomePage} />\r\n            </Switch>\r\n            <ScrollTop />\r\n        </Paper>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { favoritesVar } from '../graph/vars';\r\n\r\nexport const cache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        favorites : {\r\n          read() {\r\n            return favoritesVar()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://54.179.180.114:4000',\r\n  // uri: 'http://localhost:3000',\r\n  cache\r\n});\r\nexport default client\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport client from './config/index'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}